/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techpesc.telas;

import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import techpesc.lote.Lote;
import techpesc.lote.LoteDAO;
import techpesc.lote.LoteTableModel;
import techpesc.mortandade.Mortandade;
import techpesc.mortandade.MortandadeDAO;
import techpesc.mortandade.MortandadeTableModel;
import techpesc.tanquerede.TanqueRede;
import techpesc.tanquerede.TanqueRedeDAO;
import techpesc.tanquerede.TanqueRedeTableModel;
import techpesc.transfereTR.Transferencia;
import techpesc.transfereTR.TransferenciaDAO;
import techpesc.transfereTR.TransferenciaTableModel;
import techpesc.util.Util;

/**
 *
 * @author fatima
 */
public class CadastroTransferenciaTanque extends javax.swing.JDialog {

    Lote lote = new Lote();
    Transferencia transferencia = new Transferencia();
    TanqueRedeDAO tanqueredeDAO = new TanqueRedeDAO();
    List<TanqueRede> listaTanquesAntigos = new ArrayList<>();
    List<TanqueRede> listaTanquesNovos = new ArrayList<>();
    TransferenciaDAO transferenciaDAO = new TransferenciaDAO();
    List<TanqueRede> tanqueRedesLote = new ArrayList<>();
    List<TanqueRede> tanqueRedesNovoTR = new ArrayList<>();
    SimpleDateFormat formatar = new SimpleDateFormat("dd/MM/yyyy hh:mm");
    Date data = new Date();
    Date dataAtual = new Date();

    /**
     * Creates new form Cadastro_de_Funcionário
     */
    public CadastroTransferenciaTanque() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/techpesc/imagens/peixe.png")).getImage());
        setModal(true);
        limparCampos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator17 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        btPesquisar = new javax.swing.JButton();
        btVoltarMenu = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btSalvar1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel42 = new javax.swing.JLabel();
        tfNomeLote = new javax.swing.JTextField();
        btPesquisarNome4 = new javax.swing.JButton();
        btTransferencia = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbTanqueRedeLote = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbTanqueRedeNovoTR = new javax.swing.JTable();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        btCadastroLote1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Transferência de Tanque Rede");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(23, 49, 106));
        jPanel1.setToolTipText("");

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/cabeçalho1.png"))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Transferência de T.R.");

        jPanel2.setBackground(new java.awt.Color(23, 49, 106));

        btPesquisar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/pesquisa.png"))); // NOI18N
        btPesquisar.setText("Pesquisar");
        btPesquisar.setToolTipText("");
        btPesquisar.setContentAreaFilled(false);
        btPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btPesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        btVoltarMenu.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btVoltarMenu.setForeground(new java.awt.Color(255, 255, 255));
        btVoltarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/voltar.png"))); // NOI18N
        btVoltarMenu.setText("Voltar");
        btVoltarMenu.setToolTipText("");
        btVoltarMenu.setContentAreaFilled(false);
        btVoltarMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVoltarMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btVoltarMenu.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btVoltarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarMenuActionPerformed(evt);
            }
        });

        btSalvar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/salvar.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("");
        btSalvar.setContentAreaFilled(false);
        btSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btSalvar1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btSalvar1.setForeground(new java.awt.Color(255, 255, 255));
        btSalvar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/novo.png"))); // NOI18N
        btSalvar1.setText("Novo");
        btSalvar1.setToolTipText("");
        btSalvar1.setContentAreaFilled(false);
        btSalvar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSalvar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btVoltarMenu)
                .addGap(198, 198, 198)
                .addComponent(btSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btPesquisar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btSalvar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btVoltarMenu, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );

        jLabel42.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Lote.:");

        tfNomeLote.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfNomeLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomeLoteActionPerformed(evt);
            }
        });

        btPesquisarNome4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btPesquisarNome4.setForeground(new java.awt.Color(255, 255, 255));
        btPesquisarNome4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_pesquisar.png"))); // NOI18N
        btPesquisarNome4.setContentAreaFilled(false);
        btPesquisarNome4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisarNome4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btPesquisarNome4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPesquisarNome4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarNome4ActionPerformed(evt);
            }
        });

        btTransferencia.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btTransferencia.setForeground(new java.awt.Color(255, 255, 255));
        btTransferencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/icone_transferencia.png"))); // NOI18N
        btTransferencia.setText("Transferir");
        btTransferencia.setContentAreaFilled(false);
        btTransferencia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btTransferencia.setDefaultCapable(false);
        btTransferencia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btTransferencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btTransferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTransferenciaActionPerformed(evt);
            }
        });

        tbTanqueRedeLote.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tbTanqueRedeLote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Tanques Rede"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTanqueRedeLote.setRowSelectionAllowed(false);
        tbTanqueRedeLote.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbTanqueRedeLoteFocusLost(evt);
            }
        });
        tbTanqueRedeLote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTanqueRedeLoteMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbTanqueRedeLote);

        tbTanqueRedeNovoTR.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tbTanqueRedeNovoTR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Tanques Rede"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTanqueRedeNovoTR.setRowSelectionAllowed(false);
        tbTanqueRedeNovoTR.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbTanqueRedeNovoTRFocusLost(evt);
            }
        });
        tbTanqueRedeNovoTR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTanqueRedeNovoTRMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbTanqueRedeNovoTR);

        jLabel43.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("T.R. Desvinculados.:");

        jLabel44.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("T.R Lote.:");

        btCadastroLote1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btCadastroLote1.setForeground(new java.awt.Color(255, 255, 255));
        btCadastroLote1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_cadastrar.png"))); // NOI18N
        btCadastroLote1.setContentAreaFilled(false);
        btCadastroLote1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCadastroLote1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCadastroLote1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCadastroLote1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastroLote1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel44)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btTransferencia)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(19, 19, 19)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jLabel42)
                                .addGap(12, 12, 12)
                                .addComponent(tfNomeLote, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btPesquisarNome4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btCadastroLote1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(13, 13, 13)
                .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btCadastroLote1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfNomeLote, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel42)
                        .addComponent(btPesquisarNome4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTransferencia))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43)
                            .addComponent(jLabel44))))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (transferencia == null) {
            transferencia = new Transferencia();
        }
        if(Util.chkVazio(tfNomeLote.getText()) == true) {
            if (transferencia.getIdTransferencia() == 0) {
                for (int i = 0; i < listaTanquesAntigos.size(); i++) {
                    transferencia.setLote(lote);
                    try {
                        dataAtual = formatar.parse(formatar.format(data));
                    } catch (ParseException ex) {
                        Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    transferencia.setIdTanqueAntigo(listaTanquesAntigos.get(i).getIdTanqueRede());
                    transferencia.setNomeTanqueRedeAntigo(listaTanquesAntigos.get(i).getNomeTanqueRede());
                    transferencia.setIdTanqueNovo(listaTanquesNovos.get(i).getIdTanqueRede());
                    transferencia.setNomeTanqueRedeNovo(listaTanquesNovos.get(i).getNomeTanqueRede());
                    transferencia.setDataTransferencia(dataAtual);
                    tanqueredeDAO.salvar(listaTanquesAntigos.get(i));
                    transferenciaDAO.salvar(transferencia);
                    transferencia.setIdTransferencia(Short.valueOf("0"));
                }
                JOptionPane.showMessageDialog(rootPane, "Transferência salva com Sucesso!");
                limparCampos();
            } else {

            }
        }
    }//GEN-LAST:event_btSalvarActionPerformed
    public void limparCampos() {
        lote = new Lote();
        tfNomeLote.setText("");
        tanqueRedesLote.clear();
        tanqueRedesNovoTR.clear();
        btSalvar.setEnabled(true);
        atualizaTabelaTanqueRedeLote();
        atualizaTabelaTanqueRedeNovoTR();
    }

    private void btVoltarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarMenuActionPerformed

        dispose();
    }//GEN-LAST:event_btVoltarMenuActionPerformed

    private void btSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvar1ActionPerformed
        limparCampos();        // TODO add your handling code here:
    }//GEN-LAST:event_btSalvar1ActionPerformed

    private void tfNomeLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomeLoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNomeLoteActionPerformed

    private void btPesquisarNome4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarNome4ActionPerformed
        LoteDAO loteDAO = new LoteDAO();
        lote = new Lote();
        LoteTableModel loteTableModel = new LoteTableModel(loteDAO.listar());
        Object object = TelaConsulta.exibeTela(loteTableModel, "Lotes");        // TODO add your handling code here:
        Short codigo = Short.valueOf(String.valueOf(object));
        lote = loteDAO.pesquisarCodigo(codigo);
        tfNomeLote.setText(lote.getNomeLote());
        tanqueRedesLote = lote.getTanquesRede();
        atualizaTabelaTanqueRedeLote();
    }//GEN-LAST:event_btPesquisarNome4ActionPerformed

    private void atualizaTabelaTanqueRedeLote() {
        TanqueRedeTableModel atm = new TanqueRedeTableModel(tanqueRedesLote);
        tbTanqueRedeLote.setModel(atm);
    }

    private void atualizaTabelaTanqueRedeNovoTR() {
        TanqueRedeTableModel atm = new TanqueRedeTableModel(tanqueRedesNovoTR);
        tbTanqueRedeNovoTR.setModel(atm);
    }
    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        List<Transferencia> lista;
        TransferenciaDAO dao = new TransferenciaDAO();
        lista = (dao.listar());
        TransferenciaTableModel itm = new TransferenciaTableModel(lista);
        Object o = TelaConsulta.exibeTela(itm, "Transferencia");
        if (o != null) {
            transferencia = dao.pesquisarCodigo(Short.valueOf(String.valueOf(o)));
            tfNomeLote.setText(transferencia.getLote().getNomeLote());
            tanqueRedesLote = transferencia.getLote().getTanquesRede();
            lote = transferencia.getLote();
            atualizaTabelaTanqueRedeLote();
            atualizaTabelaTanqueRedeNovoTR();
            btSalvar.setEnabled(false);

        }
    }//GEN-LAST:event_btPesquisarActionPerformed
    private boolean verificaTanque(TanqueRede tanque) {
        for (int i = 0; i < tanqueRedesLote.size(); i++) {
            if (tanque.getIdTanqueRede() == tanqueRedesLote.get(i).getIdTanqueRede()) {
                return true;
            }
        }
        return false;

    }

    private void pesquisarTanqueRede() {
        TanqueRedeDAO trDAO = new TanqueRedeDAO();
        TanqueRedeTableModel atm = new TanqueRedeTableModel(trDAO.listar());
        Object object = TelaConsultaTanqueRede.exibeTela(atm, "Tanque Rede");
        Short codigo = Short.valueOf(String.valueOf(object));
        TanqueRede tr2;
        TanqueRede tr = trDAO.pesquisarCodigo(codigo);
        if (tr != null) {
            if (verificaTanque(tr) == false) {
                if (JOptionPane.showConfirmDialog(rootPane, "Você deseja realmente transferir os peixes do Tanque Rede: " + tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()).getNomeTanqueRede()
                        + "\n\n                 para o Tanque Rede: " + tr.getNomeTanqueRede() + " ?"
                        + "?", "TechPesc", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION) {
                    if (tr.getLimiteAlevinosTanqueRede() >= tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()).getQuantidadePeixesVinculados()) {
                        tr.setQuantidadePeixesVinculados(tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()).getQuantidadePeixesVinculados());
                        tr.setMortandadeTanqueRede(tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()).getMortandadeTanqueRede());
                        tr.setSituacaoTanqueRede(tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()).isSituacaoTanqueRede());
                        listaTanquesNovos.add(tr);
                        tr2 = tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow());
                        listaTanquesAntigos.add(tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()));
                        tanqueRedesLote.add(tr);
                        tanqueRedesNovoTR.add(tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()));
                        zerarTR();
                        tanqueRedesLote.remove(tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()));
                        atualizaTabelaTanqueRedeLote();
                        atualizaTabelaTanqueRedeNovoTR();
                        JOptionPane.showMessageDialog(rootPane, "Atenção, todas as informações do Tanque Rede: " + tr2.getNomeTanqueRede() + "\n"
                                + "Foram Migradas para o Tanque Rede: " + tr.getNomeTanqueRede() + "\n\n"
                                + "Caso queira desfazer essa alteração, clique no botão Novo",
                                "FEITO!", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "O T.R selecionado não cabe os peixes do T.R antigo!",
                                "ERRO", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "A transferência de tanques não foi realizada!",
                            "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "O tanque rede selecionado já está vinculado a este lote!",
                        "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void zerarTR() {
        for (int i = 0; i < tanqueRedesNovoTR.size(); i++) {
            tanqueRedesNovoTR.get(i).setMortandadeTanqueRede(0);
            tanqueRedesNovoTR.get(i).setQuantidadePeixesVinculados(0);
            tanqueRedesNovoTR.get(i).setSituacaoTanqueRede(true);
        }
    }
    private void btTransferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTransferenciaActionPerformed
        int row = tbTanqueRedeLote.getSelectedRow();
        if (row > -1) {
            pesquisarTanqueRede();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione o Tanque Rede!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btTransferenciaActionPerformed

    private void tbTanqueRedeLoteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbTanqueRedeLoteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tbTanqueRedeLoteFocusLost

    private void tbTanqueRedeLoteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTanqueRedeLoteMouseClicked
        if (evt.getClickCount() == 2) {
            pesquisarTanqueRede();
        }
    }//GEN-LAST:event_tbTanqueRedeLoteMouseClicked

    private void tbTanqueRedeNovoTRFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbTanqueRedeNovoTRFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tbTanqueRedeNovoTRFocusLost

    private void tbTanqueRedeNovoTRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTanqueRedeNovoTRMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbTanqueRedeNovoTRMouseClicked

    private void btCadastroLote1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastroLote1ActionPerformed
        new CadastroLote().setVisible(true);
    }//GEN-LAST:event_btCadastroLote1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroTransferenciaTanque.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroTransferenciaTanque.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroTransferenciaTanque.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroTransferenciaTanque.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroTransferenciaTanque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCadastroLote;
    private javax.swing.JButton btCadastroLote1;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btPesquisarNome4;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btSalvar1;
    private javax.swing.JButton btTransferencia;
    private javax.swing.JButton btVoltarMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tbTanqueRedeLote;
    private javax.swing.JTable tbTanqueRedeNovoTR;
    private javax.swing.JTextField tfNomeLote;
    // End of variables declaration//GEN-END:variables

}
