/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techpesc.telas;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import techpesc.alevinos.Alevino;
import techpesc.alevinos.AlevinoDAO;
import techpesc.alevinos.AlevinoRN;
import techpesc.alevinos.AlevinoTableModel;
import techpesc.fornecedor.Fornecedor;
import techpesc.fornecedor.FornecedorDAO;
import techpesc.fornecedor.FornecedorTableModel;
import techpesc.funcionario.Funcionario;
import techpesc.lote.Lote;
import techpesc.lote.LoteDAO;
import techpesc.lote.LoteRN;
import techpesc.lote.LoteTableModel;
import techpesc.tanquerede.TanqueRede;
import techpesc.tanquerede.TanqueRedeDAO;
import techpesc.tanquerede.TanqueRedeRN;
import techpesc.tanquerede.TanqueRedeTableModel;
import techpesc.util.Util;

/**
 *
 * @author fatima
 */
public class CadastroLote extends javax.swing.JDialog {

    private List<TanqueRede> tanqueRedes = new ArrayList<TanqueRede>();
    private Fornecedor fornecedor = new Fornecedor();
    private TanqueRedeDAO tanqueRedeDAO = new TanqueRedeDAO();
    private Alevino alevino = new Alevino();
    private AlevinoDAO alevinoDAO = new AlevinoDAO();
    private Lote lote = new Lote();
    private LoteDAO loteDAO = new LoteDAO();
    private LoteRN loteRN = new LoteRN();
    SimpleDateFormat formatar = new SimpleDateFormat("dd/MM/yyyy");
    Date dataAbate = new Date();
    private int qtdAlevinos;
    private int qtdAlevinosPesquisa;

    /**
     * Creates new form Cadastro_de_Lotes
     */
    public CadastroLote() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/techpesc/imagens/peixe.png")).getImage());
        atualizaTabelaTanqueRede();
        tfNumeroEntrada.setEditable(false);
        tfQtdDePeixesNaoVinculados1.setEnabled(true);
        jPanel5.setVisible(false);
        setModal(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner2 = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        btSalvar = new javax.swing.JButton();
        btVoltarMenu = new javax.swing.JButton();
        btSalvar1 = new javax.swing.JButton();
        btPesquisar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        tfNomeLote = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        tfQtdAlevinos = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        tfFornecedor = new javax.swing.JLabel();
        tfDataEntrada = new javax.swing.JLabel();
        tfDataNascimento = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        btCadastraEntradaAlevino = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        tfNumeroEntrada = new javax.swing.JTextField();
        btPesquisaEntradaAlevino = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTanqueRede = new javax.swing.JTable();
        btExcluirTanqueRede1 = new javax.swing.JButton();
        btPesquisaTanqueRede1 = new javax.swing.JButton();
        btCadastraTanqueRede = new javax.swing.JButton();
        btAdicionarPeixe = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        tfQtdDePeixesNaoVinculados1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        tfPrevisaoAbate = new javax.swing.JFormattedTextField();
        jLabel54 = new javax.swing.JLabel();
        tfCusto = new javax.swing.JLabel();
        tfLucroEstimado = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Lotes");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(23, 49, 106));

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/cabe√ßalho1.png"))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cadastro de Lotes");

        jPanel2.setBackground(new java.awt.Color(23, 49, 106));

        btSalvar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/salvar.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("");
        btSalvar.setContentAreaFilled(false);
        btSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btVoltarMenu.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btVoltarMenu.setForeground(new java.awt.Color(255, 255, 255));
        btVoltarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/voltar.png"))); // NOI18N
        btVoltarMenu.setText("Voltar");
        btVoltarMenu.setToolTipText("");
        btVoltarMenu.setContentAreaFilled(false);
        btVoltarMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVoltarMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btVoltarMenu.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btVoltarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarMenuActionPerformed(evt);
            }
        });

        btSalvar1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btSalvar1.setForeground(new java.awt.Color(255, 255, 255));
        btSalvar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/novo.png"))); // NOI18N
        btSalvar1.setText("Novo");
        btSalvar1.setToolTipText("");
        btSalvar1.setContentAreaFilled(false);
        btSalvar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSalvar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvar1ActionPerformed(evt);
            }
        });

        btPesquisar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/pesquisa.png"))); // NOI18N
        btPesquisar.setText("Pesquisar");
        btPesquisar.setToolTipText("");
        btPesquisar.setContentAreaFilled(false);
        btPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btPesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btVoltarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(213, 213, 213)
                .addComponent(btSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btPesquisar)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btSalvar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btSalvar1)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btPesquisar)
                                .addComponent(btVoltarMenu)))))
                .addGap(62, 62, 62))
        );

        jTabbedPane1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTabbedPane1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTabbedPane1FocusLost(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(23, 49, 106));

        jLabel44.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("Nome do Lote.:");

        tfNomeLote.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfNomeLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomeLoteActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(23, 49, 106));

        jLabel45.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Qtd Alevinos.:");

        jLabel47.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Data de Entrada.:");

        jLabel46.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("Fornecedor.:");

        tfQtdAlevinos.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        tfQtdAlevinos.setForeground(new java.awt.Color(255, 255, 255));
        tfQtdAlevinos.setText("???");

        jLabel51.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 255));
        jLabel51.setText("Data Nascimento.:");

        tfFornecedor.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        tfFornecedor.setForeground(new java.awt.Color(255, 255, 255));
        tfFornecedor.setText("???");

        tfDataEntrada.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        tfDataEntrada.setForeground(new java.awt.Color(255, 255, 255));
        tfDataEntrada.setText("???");

        tfDataNascimento.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        tfDataNascimento.setForeground(new java.awt.Color(255, 255, 255));
        tfDataNascimento.setText("???");

        jLabel43.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("Informa√ß√µes gerais da entrada do alevino");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel51)
                    .addComponent(jLabel46)
                    .addComponent(jLabel45)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfFornecedor)
                    .addComponent(tfQtdAlevinos)
                    .addComponent(tfDataNascimento)
                    .addComponent(tfDataEntrada))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jLabel43)
                .addGap(33, 33, 33))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(tfQtdAlevinos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(tfFornecedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(tfDataNascimento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(tfDataEntrada))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        btCadastraEntradaAlevino.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btCadastraEntradaAlevino.setForeground(new java.awt.Color(255, 255, 255));
        btCadastraEntradaAlevino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_cadastrar.png"))); // NOI18N
        btCadastraEntradaAlevino.setContentAreaFilled(false);
        btCadastraEntradaAlevino.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCadastraEntradaAlevino.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCadastraEntradaAlevino.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCadastraEntradaAlevino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastraEntradaAlevinoActionPerformed(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("N¬∞ Entrada.:");

        tfNumeroEntrada.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfNumeroEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNumeroEntradaActionPerformed(evt);
            }
        });

        btPesquisaEntradaAlevino.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btPesquisaEntradaAlevino.setForeground(new java.awt.Color(255, 255, 255));
        btPesquisaEntradaAlevino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_pesquisar.png"))); // NOI18N
        btPesquisaEntradaAlevino.setContentAreaFilled(false);
        btPesquisaEntradaAlevino.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisaEntradaAlevino.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btPesquisaEntradaAlevino.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPesquisaEntradaAlevino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaEntradaAlevinoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfNomeLote, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(tfNumeroEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btPesquisaEntradaAlevino, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCadastraEntradaAlevino, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel44))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfNomeLote, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfNumeroEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btPesquisaEntradaAlevino, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btCadastraEntradaAlevino, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lote", jPanel4);

        jPanel5.setBackground(new java.awt.Color(23, 49, 106));

        jLabel48.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("Qtd de peixes n√£o ");

        tbTanqueRede.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tbTanqueRede.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Tanques Rede"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTanqueRede.setRowSelectionAllowed(false);
        tbTanqueRede.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbTanqueRedeFocusLost(evt);
            }
        });
        tbTanqueRede.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTanqueRedeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbTanqueRede);

        btExcluirTanqueRede1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_excluir.png"))); // NOI18N
        btExcluirTanqueRede1.setContentAreaFilled(false);
        btExcluirTanqueRede1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btExcluirTanqueRede1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirTanqueRede1ActionPerformed(evt);
            }
        });

        btPesquisaTanqueRede1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_pesquisar.png"))); // NOI18N
        btPesquisaTanqueRede1.setContentAreaFilled(false);
        btPesquisaTanqueRede1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisaTanqueRede1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaTanqueRede1ActionPerformed(evt);
            }
        });

        btCadastraTanqueRede.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_cadastrar.png"))); // NOI18N
        btCadastraTanqueRede.setContentAreaFilled(false);
        btCadastraTanqueRede.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCadastraTanqueRede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastraTanqueRedeActionPerformed(evt);
            }
        });

        btAdicionarPeixe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/adicionar_criacao.png"))); // NOI18N
        btAdicionarPeixe.setToolTipText("Adiciona peixes ao tanque rede selecionado");
        btAdicionarPeixe.setContentAreaFilled(false);
        btAdicionarPeixe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAdicionarPeixe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarPeixeActionPerformed(evt);
            }
        });

        jLabel50.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setText("v√≠nculados a T.R..:");

        tfQtdDePeixesNaoVinculados1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        tfQtdDePeixesNaoVinculados1.setForeground(new java.awt.Color(255, 255, 255));
        tfQtdDePeixesNaoVinculados1.setText("???");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(btAdicionarPeixe, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btCadastraTanqueRede, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btPesquisaTanqueRede1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btExcluirTanqueRede1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel50)
                            .addComponent(jLabel48)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(tfQtdDePeixesNaoVinculados1)))
                .addGap(92, 92, 92))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btExcluirTanqueRede1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btPesquisaTanqueRede1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btCadastraTanqueRede, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAdicionarPeixe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfQtdDePeixesNaoVinculados1))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Taque Rede", jPanel5);

        jPanel3.setBackground(new java.awt.Color(23, 49, 106));

        jLabel52.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 255));
        jLabel52.setText("Previs√£o de abate.:");

        jLabel53.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setText("Custo com Alevino.:");

        try {
            tfPrevisaoAbate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfPrevisaoAbate.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfPrevisaoAbate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfPrevisaoAbateFocusLost(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 255, 255));
        jLabel54.setText("Lucro Bruto Estimado.:");

        tfCusto.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        tfCusto.setForeground(new java.awt.Color(255, 255, 255));
        tfCusto.setText("???");

        tfLucroEstimado.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        tfLucroEstimado.setForeground(new java.awt.Color(255, 255, 255));
        tfLucroEstimado.setText("???");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel53)
                    .addComponent(jLabel52))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfPrevisaoAbate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCusto))
                .addContainerGap(179, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel54)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfLucroEstimado)
                .addGap(85, 85, 85))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(tfPrevisaoAbate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(tfCusto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(tfLucroEstimado))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Previs√µes/Custo", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel41)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator3)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jSeparator2))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (lote == null) {
            lote = new Lote();
        }
        if (Util.chkVazio(tfNomeLote.getText(), tfPrevisaoAbate.getText(),tfNumeroEntrada.getText()) == true) {
            if (verificaTanquesVazios() == false) {
                if (lote.getIdLote() == 0) {
                    lote.setNomeLote(tfNomeLote.getText());
                    lote.setLucroEstimado(Double.parseDouble(tfLucroEstimado.getText()));
                    try {
                        dataAbate = formatar.parse(tfPrevisaoAbate.getText());
                    } catch (ParseException ex) {
                        Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    lote.setPrevisaoAbate(dataAbate);
                    alevino.setSituacaoEntradaAlevino(false);
                    lote.setAlevino(alevino);
                    lote.setTanquesRede(tanqueRedes);
                    if (tfNomeLote.getText() == "" || tfPrevisaoAbate.getText() == "") {
                        JOptionPane.showMessageDialog(rootPane, "Os campos Nome do Lote e Previs√£o de Abate s√£o obrigat√≥rios!",
                                "ERRO", JOptionPane.ERROR_MESSAGE);
                    } else {
                        if (Integer.parseInt(tfQtdDePeixesNaoVinculados1.getText()) > 0) {
                            JOptionPane.showMessageDialog(rootPane, "A quantidade de tanques vinculados n√£o √© suficiente para armazenar todos os peixes deste lote!",
                                    "ERRO", JOptionPane.ERROR_MESSAGE);
                        } else {
                            alevinoDAO.salvar(alevino);
                            loteDAO.salvar(lote);
                            for (int i = 0; i < tanqueRedes.size(); i++) {
                                tanqueRedeDAO.salvar(tanqueRedes.get(i));
                            }
                            JOptionPane.showMessageDialog(rootPane, "Lote Cadastrado com Sucesso!");
                            limparCampos();
                        }
                    }

                } else {
                    lote.setNomeLote(tfNomeLote.getText());
                    lote.setLucroEstimado(Double.parseDouble(tfLucroEstimado.getText()));
                    try {
                        dataAbate = formatar.parse(tfPrevisaoAbate.getText());
                    } catch (ParseException ex) {
                        Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    lote.setPrevisaoAbate(dataAbate);
                    if (alevino.getFornecedor() == null) {
                        lote.setAlevino(lote.getAlevino());
                    } else {
                        lote.setAlevino(alevino);
                    }
                    lote.setTanquesRede(tanqueRedes);
                    if (JOptionPane.showConfirmDialog(rootPane, "Deseja realmente editar o Lote: " + lote.getNomeLote()
                            + "?", "TechPesc", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION) {
                        if (Integer.parseInt(tfQtdDePeixesNaoVinculados1.getText()) > 0) {
                            JOptionPane.showMessageDialog(rootPane, "A quantidade de tanques vinculados n√£o √© suficiente para armazenar todos os peixes deste lote!",
                                    "ERRO", JOptionPane.ERROR_MESSAGE);
                        } else {
                            loteDAO.salvar(lote);
                            for (int i = 0; i < tanqueRedes.size(); i++) {
                                tanqueRedeDAO.salvar(tanqueRedes.get(i));
                            }
                            JOptionPane.showMessageDialog(rootPane, "Pronto, o Lote" + lote.getNomeLote()
                                    + ", foi editado com sucesso!", "Lote", JOptionPane.INFORMATION_MESSAGE);
                            limparCampos();
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "N√£o foi poss√≠vel editar este lote!",
                                "ERRO", JOptionPane.ERROR_MESSAGE);
                        limparCampos();
                    }

                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "N√£o √© poss√≠vel salvar um lote com tanques v√°zios!",
                        "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private boolean verificaTanquesVazios() {
        for (int i = 0; i < tanqueRedes.size(); i++) {
            if (tanqueRedes.get(i).getQuantidadePeixesVinculados() == 0) {
                return true;
            }
        }
        return false;

    }

    private void tfNomeLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomeLoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNomeLoteActionPerformed

    private void btPesquisaEntradaAlevinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaEntradaAlevinoActionPerformed
        if (lote.getIdLote() != 0) {
            JOptionPane.showMessageDialog(rootPane, "N√£o √© poss√≠vel alterar a entrada de Alevino de um Lote j√° cadastrado!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        } else {
            AlevinoDAO alevinoDAO = new AlevinoDAO();
            List<Alevino> lista;
            AlevinoDAO dao = new AlevinoDAO();
            lista = (dao.listar());
            AlevinoTableModel alevinoTableModel = new AlevinoTableModel(alevinoDAO.listar());
            Object object = TelaConsultaEntradaAlevino.exibeTela(alevinoTableModel, "Alevinos");        // TODO add your handling code here:
            Short codigo = Short.valueOf(String.valueOf(object));
            alevino = alevinoDAO.pesquisarCodigo(codigo);
            if (alevino.isSituacaoEntradaAlevino() == true) {
                tfNumeroEntrada.setText(String.valueOf(alevino.getIdEntradaAlevino()));
                tfQtdAlevinos.setText(String.valueOf(alevino.getQtdAlevino()));
                tfFornecedor.setText(String.valueOf(alevino.getFornecedor().getNomeFornecedor()));
                Date dtNascimento = alevino.getDataNascimentoAlevino();
                tfDataNascimento.setText(formatar.format(dtNascimento));
                Date dtEntrada = alevino.getDataEntrada();
                tfDataEntrada.setText(formatar.format(dtEntrada));
                tfCusto.setText(String.valueOf(alevino.getValorAlevino() * alevino.getQtdAlevino()));
                tfLucroEstimado.setText(String.valueOf((5 * alevino.getQtdAlevino()) - alevino.getValorAlevino() * alevino.getQtdAlevino()));
                qtdAlevinos = alevino.getQtdAlevino();
                if (lote.getIdLote() == 0) {
                    tfQtdDePeixesNaoVinculados1.setText(String.valueOf(qtdAlevinos));
                } else {
                    tanqueRedes.clear();
                    atualizaTabelaTanqueRede();
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Esta entrada j√° est√° v√≠nculada a outro Lote!",
                        "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btPesquisaEntradaAlevinoActionPerformed

    private void tfNumeroEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNumeroEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNumeroEntradaActionPerformed

    private void btVoltarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarMenuActionPerformed

        dispose();
    }//GEN-LAST:event_btVoltarMenuActionPerformed

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        List<Lote> lista;
        LoteDAO dao = new LoteDAO();
        lista = (dao.listar());
        LoteTableModel itm = new LoteTableModel(lista);
        Object o = TelaConsulta.exibeTela(itm, "Lote");
        if (o != null) {
            lote = loteRN.pesquisarCodigo(Short.valueOf(String.valueOf(o)));
            Date dtAbate = lote.getPrevisaoAbate();
            tfPrevisaoAbate.setText(formatar.format(dtAbate));
            Date dtNascimento = lote.getAlevino().getDataNascimentoAlevino();
            tfDataNascimento.setText(formatar.format(dtNascimento));
            Date dtEntrada = lote.getAlevino().getDataEntrada();
            tfDataEntrada.setText(formatar.format(dtEntrada));
            tfFornecedor.setText(lote.getAlevino().getFornecedor().getNomeFornecedor());
            tfPrevisaoAbate.setText(String.valueOf(lote.getPrevisaoAbate()));
            tfNomeLote.setText(lote.getNomeLote());
            tfNumeroEntrada.setText(String.valueOf(lote.getAlevino().getIdEntradaAlevino()));
            tfQtdAlevinos.setText(String.valueOf(lote.getAlevino().getQtdAlevino()));
            tfCusto.setText(String.valueOf(lote.getAlevino().getValorAlevino() * lote.getAlevino().getQtdAlevino()));
            tfLucroEstimado.setText(String.valueOf((5 * lote.getAlevino().getQtdAlevino()) - lote.getAlevino().getValorAlevino() * lote.getAlevino().getQtdAlevino()));
            tanqueRedes = lote.getTanquesRede();
            qtdAlevinos = lote.getAlevino().getQtdAlevino();
            atualizaTabelaTanqueRede();
            somaPeixes();

        }
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void btExcluirTanqueRede1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirTanqueRede1ActionPerformed

        if (JOptionPane.showConfirmDialog(rootPane, "Deseja Excluir o Tanque Rede " + tanqueRedes.get(tbTanqueRede.getSelectedRow()).getNomeTanqueRede() + "?",
                "Excluir", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {
            int row = tbTanqueRede.getSelectedRow();
            if (row > -1) {
                Object o = tbTanqueRede.getValueAt(row, 0);
                tanqueRedes.get(tbTanqueRede.getSelectedRow()).setQuantidadePeixesVinculados(0);
                tanqueRedes.get(tbTanqueRede.getSelectedRow()).setSituacaoTanqueRede(true);
                tanqueRedes.get(tbTanqueRede.getSelectedRow()).setQuantidadePeixesVinculados(0);
                tanqueRedes.get(tbTanqueRede.getSelectedRow()).setSituacaoTanqueRede(true);
                tanqueRedes.remove(tanqueRedes.get(tbTanqueRede.getSelectedRow()));
                somaPeixes();
                atualizaTabelaTanqueRede();
                JOptionPane.showMessageDialog(rootPane, "O Tanque Rede " + tanqueRedes.get(tbTanqueRede.getSelectedRow()).getNomeTanqueRede() + " foi Exclu√É¬≠do com Sucesso!",
                        "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Nenhum tanque foi exclu√≠do",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        atualizaTabelaTanqueRede();
    }//GEN-LAST:event_btExcluirTanqueRede1ActionPerformed

    private TanqueRede selecionarTanque() {
        int row = tbTanqueRede.getSelectedRow();
        TanqueRede tanqueRede = null;
        if (row > -1) {
            Object recebeID = tbTanqueRede.getValueAt(row, 0);
            tanqueRede = new TanqueRede();
            short id = Short.valueOf(String.valueOf(recebeID));
            TanqueRedeRN dao = new TanqueRedeRN();
            try {
                tanqueRede = dao.pesquisarCodigo(id);
            } catch (Exception ex) {
                System.out.println("Erro: " + ex.getMessage());
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione a Linha!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        return tanqueRede;

    }
    private void btPesquisaTanqueRede1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaTanqueRede1ActionPerformed
        if (!tfQtdDePeixesNaoVinculados1.getText().equals("")) {
            if (!tfNomeLote.getText().equals("")) {
                TanqueRedeDAO trDAO = new TanqueRedeDAO();
                TanqueRedeTableModel atm = new TanqueRedeTableModel(trDAO.listar());
                Object object = TelaConsultaTanqueRede.exibeTela(atm, "Tanque Rede");
                Short codigo = Short.valueOf(String.valueOf(object));
                TanqueRede tr = trDAO.pesquisarCodigo(codigo);
                if (Integer.parseInt(tfQtdDePeixesNaoVinculados1.getText()) != 0) {
                    if (qtdAlevinos < 0) {
                        JOptionPane.showMessageDialog(rootPane, "O n√∫mero de tanques v√≠nculados j√° possui o espa√ßo necess√°rio" + "\n para a quantidade de "
                                + "peixes que est√° tentando cadastrar!\n Sendo assim n√£o √© mais necess√°rio vincular nenhum Tanque Rede a este Lote!\n\n"
                                + "Quantidade de Peixes deste Lote: " + tfQtdAlevinos.getText()
                                + "\nQuantidade de Peixes N√£o Vinculados: " + qtdAlevinos,
                                "ERRO", JOptionPane.ERROR_MESSAGE);
                    } else {
                        if (verificaTanqueRede(tr) == false) {
                            tr.setSituacaoTanqueRede(false);
                            tanqueRedes.add(tr);
                            atualizaTabelaTanqueRede();
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Este tanque j√° est√° vinculado a este lote!",
                                    "ERRO", JOptionPane.ERROR_MESSAGE);
                        }
                        atualizaTabelaTanqueRede();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "N√£o h√° mais peixes para serem vinculados!",
                            "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "√â obrigat√≥rio digitar o nome do Lote!\n\n"
                        + "Volte at√© a op√ß√£o Lote e digite!",
                        "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Nenhuma entrada de peixe foi selecionada!\n\n"
                    + "Carregue-a na op√ß√£o Lote para prosseguir!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btPesquisaTanqueRede1ActionPerformed

    private boolean verificaTanqueRede(TanqueRede tr) {
        for (int i = 0; i < tanqueRedes.size(); i++) {
            if (tr.getIdTanqueRede() == tanqueRedes.get(i).getIdTanqueRede()) {
                return true;
            }
        }
        return false;
    }
    private void btSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvar1ActionPerformed
        limparCampos();
    }//GEN-LAST:event_btSalvar1ActionPerformed

    private void btCadastraEntradaAlevinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastraEntradaAlevinoActionPerformed
        new CadastroCliente().setVisible(true);
    }//GEN-LAST:event_btCadastraEntradaAlevinoActionPerformed

    private void btCadastraTanqueRedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastraTanqueRedeActionPerformed
        new CadastroTanqueRede().setVisible(true);

    }//GEN-LAST:event_btCadastraTanqueRedeActionPerformed

    private void tfPrevisaoAbateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfPrevisaoAbateFocusLost
        if (Util.dataValida(tfPrevisaoAbate.getText().toString()) == false) {
            JOptionPane.showMessageDialog(rootPane, "Data inv√°lida, redigite!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
            tfPrevisaoAbate.setText("");
        }
    }//GEN-LAST:event_tfPrevisaoAbateFocusLost

    private void tbTanqueRedeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbTanqueRedeFocusLost

    }//GEN-LAST:event_tbTanqueRedeFocusLost

    private void btAdicionarPeixeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarPeixeActionPerformed
        int row = tbTanqueRede.getSelectedRow();
        if (row > -1) {
            Object o = tbTanqueRede.getValueAt(row, 0);
            if (tanqueRedes.get(tbTanqueRede.getSelectedRow()).getQuantidadePeixesVinculados() == 0) {
                int peixesParaVincular = Integer.parseInt(JOptionPane.showInputDialog("Digite a quantidade de Peixes que deseja vincular a este Tanque", tanqueRedes.get(tbTanqueRede.getSelectedRow()).getQuantidadePeixesVinculados()));
                if (peixesParaVincular > Integer.parseInt(tfQtdDePeixesNaoVinculados1.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "N√£o foi poss√≠vel v√≠ncular esses peixes ao Tanque Rede Selecionado!\n\n"
                            + "                         O n√∫mero de peixes desse lote √©: " + tfQtdAlevinos.getText()
                            + "\n                             Por√©m s√≥ faltar vincular: " + tfQtdDePeixesNaoVinculados1.getText() + " Peixes"
                            + "\n                              E voc√™ tentou vincular: " + peixesParaVincular + " Peixes", "ERRO", JOptionPane.ERROR_MESSAGE);
                } else {
                    if (peixesParaVincular > tanqueRedes.get(tbTanqueRede.getSelectedRow()).getLimiteAlevinosTanqueRede()) {
                        JOptionPane.showMessageDialog(rootPane, "N√£o foi poss√≠vel v√≠ncular esses peixes ao Tanque Rede Selecionado!\n\n"
                                + "                     O limite m√°ximo desse tanque rede √©: " + tanqueRedes.get(tbTanqueRede.getSelectedRow()).getLimiteAlevinosTanqueRede() + " Peixes"
                                + "\n                                E voc√™ tentou vincular: " + peixesParaVincular + " Peixes", "ERRO", JOptionPane.ERROR_MESSAGE);
                    } else {
                        if ((peixesParaVincular == tanqueRedes.get(tbTanqueRede.getSelectedRow()).getQuantidadePeixesVinculados()) && (peixesParaVincular != 0)) {
                            JOptionPane.showMessageDialog(rootPane, "A quantidade de Peixes n√£o foi alterada, pois o valor dos \npeixes vinculados √© o mesmo que o n√∫mero digitado!", "ERRO", JOptionPane.ERROR_MESSAGE);
                        } else {
                            if ((peixesParaVincular > 0)) {
                                tanqueRedes.get(tbTanqueRede.getSelectedRow()).setQuantidadePeixesVinculados(peixesParaVincular);
                                tanqueRedes.get(tbTanqueRede.getSelectedRow()).setSituacaoTanqueRede(false);
                                atualizaTabelaTanqueRede();
                                somaPeixes();
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Nenhum peixe foi vinculado!", "ERRO", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Para alterar o valor de peixes vinculados, exclua o tanque rede e adicione-o novamente!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione o Tanque Rede!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btAdicionarPeixeActionPerformed

    private void somaPeixes() {
        int somaTotalPeixes = 0;
        if ((qtdAlevinos != 0) || (lote.getIdLote() != 0)) {
            for (int i = 0; i < tanqueRedes.size(); i++) {
                somaTotalPeixes = somaTotalPeixes + tanqueRedes.get(i).getQuantidadePeixesVinculados();
            }
            if (lote.getIdLote() == 0) {
                tfQtdDePeixesNaoVinculados1.setText(String.valueOf(alevino.getQtdAlevino() - somaTotalPeixes));
            } else {
                tfQtdDePeixesNaoVinculados1.setText(String.valueOf(lote.getAlevino().getQtdAlevino() - somaTotalPeixes));
            }

        }
    }
    private void jTabbedPane1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane1FocusGained

    }//GEN-LAST:event_jTabbedPane1FocusGained

    private void jTabbedPane1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane1FocusLost

    }//GEN-LAST:event_jTabbedPane1FocusLost

    private void tbTanqueRedeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTanqueRedeMouseClicked
        if (evt.getClickCount() == 2) {
            btAdicionarPeixeActionPerformed(null);
        }
    }//GEN-LAST:event_tbTanqueRedeMouseClicked

    public void limparCampos() {
        tfCusto.setText("");
        tfDataEntrada.setText("");
        tfDataNascimento.setText("");
        tfFornecedor.setText("");
        tfLucroEstimado.setText("");
        tfNomeLote.setText("");
        tfNumeroEntrada.setText("");
        tfPrevisaoAbate.setText("");
        tfQtdAlevinos.setText("");
        tfQtdDePeixesNaoVinculados1.setText("");
        tanqueRedes.clear();
        atualizaTabelaTanqueRede();
        lote = new Lote();

    }

    private void atualizaTabelaTanqueRede() {
        TanqueRedeTableModel atm = new TanqueRedeTableModel(tanqueRedes);
        tbTanqueRede.setModel(atm);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroLote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroLote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroLote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroLote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroLote().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionarPeixe;
    private javax.swing.JButton btCadastraEntradaAlevino;
    private javax.swing.JButton btCadastraTanqueRede;
    private javax.swing.JButton btExcluirTanqueRede1;
    private javax.swing.JButton btPesquisaEntradaAlevino;
    private javax.swing.JButton btPesquisaTanqueRede1;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btSalvar1;
    private javax.swing.JButton btVoltarMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable tbTanqueRede;
    private javax.swing.JLabel tfCusto;
    private javax.swing.JLabel tfDataEntrada;
    private javax.swing.JLabel tfDataNascimento;
    private javax.swing.JLabel tfFornecedor;
    private javax.swing.JLabel tfLucroEstimado;
    private javax.swing.JTextField tfNomeLote;
    private javax.swing.JTextField tfNumeroEntrada;
    private javax.swing.JFormattedTextField tfPrevisaoAbate;
    private javax.swing.JLabel tfQtdAlevinos;
    private javax.swing.JLabel tfQtdDePeixesNaoVinculados1;
    // End of variables declaration//GEN-END:variables
}
