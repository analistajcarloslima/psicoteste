/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techpesc.telas;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import sun.java2d.pipe.SpanShapeRenderer;
import techpesc.alevinos.Alevino;
import techpesc.alevinos.AlevinoDAO;
import techpesc.alevinos.AlevinoRN;
import techpesc.alevinos.AlevinoTableModel;
import techpesc.estoque.Estoque;
import techpesc.estoque.EstoqueDAO;
import techpesc.estoque.EstoqueRN;
import techpesc.estoque.malha.Malha;
import techpesc.estoque.malha.MalhaDAO;
import techpesc.estoque.malha.MalhaRN;
import techpesc.estoque.malha.MalhaTableModel;
import techpesc.estoque.medicamento.Medicamento;
import techpesc.estoque.medicamento.MedicamentoDAO;
import techpesc.estoque.medicamento.MedicamentoRN;
import techpesc.estoque.medicamento.MedicamentoTableModel;
import techpesc.estoque.outros.Outros;
import techpesc.estoque.outros.OutrosDAO;
import techpesc.estoque.outros.OutrosRN;
import techpesc.estoque.outros.OutrosTableModel;
import techpesc.estoque.racao.Racao;
import techpesc.estoque.racao.RacaoDAO;
import techpesc.estoque.racao.RacaoRN;
import techpesc.estoque.racao.RacaoTableModel;
import techpesc.fornecedor.Fornecedor;
import techpesc.fornecedor.FornecedorDAO;
import techpesc.fornecedor.FornecedorTableModel;
import techpesc.funcionario.Funcionario;
import techpesc.funcionario.FuncionarioDAO;
import techpesc.funcionario.FuncionarioRN;
import techpesc.funcionario.FuncionarioTableModel;
import techpesc.util.Util;

/**
 *
 * @author fatima
 */
public class CadastroEstoque extends javax.swing.JDialog {

    Estoque estoque;
    MalhaDAO malhaDAO = new MalhaDAO();
    RacaoDAO racaoDAO = new RacaoDAO();
    MedicamentoDAO medicamentoDAO = new MedicamentoDAO();
    OutrosDAO outrosDAO = new OutrosDAO();
    MalhaRN malhaRN = new MalhaRN();
    RacaoRN racaoRN = new RacaoRN();
    MedicamentoRN medicamentoRN = new MedicamentoRN();
    OutrosRN outrosRN = new OutrosRN();
    Fornecedor fornecedor;
    SimpleDateFormat formatar = new SimpleDateFormat("dd/MM/yyyy");
    Date data = new Date();
    Date dataAtual = new Date();
    Date dataValidade = new Date();

    /**
     * Creates new form Cadastro_de_Funcionário
     */
    public CadastroEstoque() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/techpesc/imagens/peixe.png")).getImage());
        tfFornecedor.setEditable(false);
        setModal(true);
        limparCampos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        racao1 = new techpesc.estoque.racao.Racao();
        racao2 = new techpesc.estoque.racao.Racao();
        racao3 = new techpesc.estoque.racao.Racao();
        jPanel1 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator17 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        btPesquisar = new javax.swing.JButton();
        btVoltarMenu = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btExcluir3 = new javax.swing.JButton();
        btSalvar1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        tfQuantidade = new javax.swing.JTextField();
        tfValorCompra = new javax.swing.JTextField();
        tfFornecedor = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        btPesquisarNome4 = new javax.swing.JButton();
        jcProduto = new javax.swing.JComboBox();
        jLabel49 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        tfProteina = new javax.swing.JTextField();
        jlProteina = new javax.swing.JLabel();
        jcFase = new javax.swing.JComboBox();
        jlFase = new javax.swing.JLabel();
        jlTamanho = new javax.swing.JLabel();
        jcMedicamento = new javax.swing.JComboBox();
        jlMedicamento = new javax.swing.JLabel();
        tfTamanho = new javax.swing.JTextField();
        jlDescricao = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfDescricao = new javax.swing.JTextArea();
        tfDataValidade = new javax.swing.JFormattedTextField();
        tfPesoRacao = new javax.swing.JTextField();
        jlTamanho2 = new javax.swing.JLabel();
        jlTamanho3 = new javax.swing.JLabel();
        btCadastroEstoque = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Estoque");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(23, 49, 106));
        jPanel1.setToolTipText("");

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/cabeçalho1.png"))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Entrada de Produtos");

        jPanel2.setBackground(new java.awt.Color(23, 49, 106));

        btPesquisar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/pesquisa.png"))); // NOI18N
        btPesquisar.setText("Pesquisar");
        btPesquisar.setToolTipText("");
        btPesquisar.setContentAreaFilled(false);
        btPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btPesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        btVoltarMenu.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btVoltarMenu.setForeground(new java.awt.Color(255, 255, 255));
        btVoltarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/voltar.png"))); // NOI18N
        btVoltarMenu.setText("Voltar");
        btVoltarMenu.setToolTipText("");
        btVoltarMenu.setContentAreaFilled(false);
        btVoltarMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVoltarMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btVoltarMenu.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btVoltarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarMenuActionPerformed(evt);
            }
        });

        btSalvar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/salvar.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("");
        btSalvar.setContentAreaFilled(false);
        btSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btExcluir3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btExcluir3.setForeground(new java.awt.Color(255, 255, 255));
        btExcluir3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/excluir2.png"))); // NOI18N
        btExcluir3.setText("Excluir");
        btExcluir3.setToolTipText("");
        btExcluir3.setContentAreaFilled(false);
        btExcluir3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btExcluir3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btExcluir3.setPreferredSize(new java.awt.Dimension(57, 35));
        btExcluir3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btExcluir3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluir3ActionPerformed(evt);
            }
        });

        btSalvar1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btSalvar1.setForeground(new java.awt.Color(255, 255, 255));
        btSalvar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/novo.png"))); // NOI18N
        btSalvar1.setText("Novo");
        btSalvar1.setToolTipText("");
        btSalvar1.setContentAreaFilled(false);
        btSalvar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSalvar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btVoltarMenu)
                        .addGap(175, 175, 175)
                        .addComponent(btSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btExcluir3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btSalvar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btExcluir3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btVoltarMenu)
                            .addComponent(btSalvar)
                            .addComponent(btPesquisar))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jLabel42.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Fornecedor.:");

        jLabel43.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("Quantidade .:");

        tfQuantidade.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfQuantidadeActionPerformed(evt);
            }
        });

        tfValorCompra.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfValorCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfValorCompraActionPerformed(evt);
            }
        });

        tfFornecedor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFornecedorActionPerformed(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Valor da Compra.:");

        btPesquisarNome4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btPesquisarNome4.setForeground(new java.awt.Color(255, 255, 255));
        btPesquisarNome4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_pesquisar.png"))); // NOI18N
        btPesquisarNome4.setContentAreaFilled(false);
        btPesquisarNome4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisarNome4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btPesquisarNome4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPesquisarNome4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarNome4ActionPerformed(evt);
            }
        });

        jcProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----", "Medicamento", "Malha", "Ração", "Outros" }));
        jcProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcProdutoActionPerformed(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("Produto.:");

        jLabel46.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("Data de Validade .:");

        jLabel47.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Infor. Adicionais");

        tfProteina.setBackground(new java.awt.Color(240, 240, 240));
        tfProteina.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfProteina.setEnabled(false);
        tfProteina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfProteinaActionPerformed(evt);
            }
        });

        jlProteina.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jlProteina.setForeground(new java.awt.Color(255, 255, 255));
        jlProteina.setText("Proteína % .:");

        jcFase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----", "Alevino", "Juvenil", "Adulto" }));
        jcFase.setEnabled(false);
        jcFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcFaseActionPerformed(evt);
            }
        });

        jlFase.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jlFase.setForeground(new java.awt.Color(255, 255, 255));
        jlFase.setText("Fase .:");

        jlTamanho.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jlTamanho.setForeground(new java.awt.Color(255, 255, 255));
        jlTamanho.setText("Tamanho .:");

        jcMedicamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----", "Prevenção", "Combate" }));
        jcMedicamento.setEnabled(false);
        jcMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcMedicamentoActionPerformed(evt);
            }
        });

        jlMedicamento.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jlMedicamento.setForeground(new java.awt.Color(255, 255, 255));
        jlMedicamento.setText("Tipo Medic. .:");

        tfTamanho.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfTamanho.setEnabled(false);
        tfTamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTamanhoActionPerformed(evt);
            }
        });

        jlDescricao.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jlDescricao.setForeground(new java.awt.Color(255, 255, 255));
        jlDescricao.setText("Descrição/Nome Produto .:");

        tfDescricao.setColumns(20);
        tfDescricao.setRows(5);
        tfDescricao.setEnabled(false);
        jScrollPane1.setViewportView(tfDescricao);

        try {
            tfDataValidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfDataValidade.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfDataValidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfDataValidadeFocusLost(evt);
            }
        });

        tfPesoRacao.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfPesoRacao.setEnabled(false);
        tfPesoRacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPesoRacaoActionPerformed(evt);
            }
        });

        jlTamanho2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jlTamanho2.setForeground(new java.awt.Color(255, 255, 255));
        jlTamanho2.setText("Kg");

        jlTamanho3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jlTamanho3.setForeground(new java.awt.Color(255, 255, 255));
        jlTamanho3.setText("Peso Unid .:");

        btCadastroEstoque.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btCadastroEstoque.setForeground(new java.awt.Color(255, 255, 255));
        btCadastroEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_cadastrar.png"))); // NOI18N
        btCadastroEstoque.setContentAreaFilled(false);
        btCadastroEstoque.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCadastroEstoque.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCadastroEstoque.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCadastroEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastroEstoqueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabel49))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel43)
                                    .addComponent(jLabel46)
                                    .addComponent(jLabel45))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfValorCompra, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(tfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfDataValidade)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jcProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tfFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btPesquisarNome4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btCadastroEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jlDescricao)
                                    .addComponent(jScrollPane1))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jlFase)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcFase, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jlProteina)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfProteina, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jlMedicamento)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel47)
                                        .addGap(24, 24, 24)))
                                .addGap(76, 76, 76))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jlTamanho)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jlTamanho3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfPesoRacao, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlTamanho2))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(13, 13, 13)
                .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49)
                            .addComponent(jcProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(tfDataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfValorCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel42)
                                        .addGap(2, 2, 2))
                                    .addComponent(tfFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                    .addComponent(btPesquisarNome4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlDescricao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btCadastroEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlMedicamento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcFase, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlFase))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfProteina, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlProteina))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlTamanho)
                            .addComponent(tfTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlTamanho2)
                            .addComponent(tfPesoRacao, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlTamanho3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        if (jcProduto.getSelectedItem() != "----") {
            switch (jcProduto.getSelectedIndex()) {
                case 1:
                    List<Medicamento> listaMedicamento;
                    Medicamento medicamento = new Medicamento();
                    listaMedicamento = (medicamentoDAO.listar());
                    MedicamentoTableModel itmMedicamento = new MedicamentoTableModel(listaMedicamento);
                    Object oMedicamento = TelaConsulta.exibeTela(itmMedicamento, "Medicamento");
                    if (oMedicamento != null) {
                        estoque = medicamentoRN.pesquisarCodigo(Short.valueOf(String.valueOf(oMedicamento)));
                        medicamento = medicamentoRN.pesquisarCodigo(Short.valueOf(String.valueOf(oMedicamento)));
                        tfDataValidade.setText(formatar.format(estoque.getDataValidade()));
                        tfDescricao.setText(String.valueOf(estoque.getDescricaoOutros()));
                        tfFornecedor.setText(String.valueOf(estoque.getFornecedor().getNomeFornecedor()));
                        jcMedicamento.setSelectedItem(medicamento.getTipoMedicamento());
                        tfValorCompra.setText(String.valueOf(estoque.getValorCompra()));
                        tfQuantidade.setText(String.valueOf(estoque.getQtdEstoque()));
                        jcProduto.setSelectedItem(estoque.getTipoProduto());
                        fornecedor = estoque.getFornecedor();
                        jcProduto.setEnabled(false);
                        btExcluir3.setEnabled(true);
                    }
                    break;
                case 2:
                    List<Malha> listaMalha;
                    Malha malha = new Malha();
                    MalhaDAO daoMalha = new MalhaDAO();
                    listaMalha = (daoMalha.listar());
                    MalhaTableModel itmMalha = new MalhaTableModel(listaMalha);
                    Object oMalha = TelaConsulta.exibeTela(itmMalha, "Malha");
                    if (oMalha != null) {
                        estoque = malhaRN.pesquisarCodigo(Short.valueOf(String.valueOf(oMalha)));
                        malha = malhaRN.pesquisarCodigo(Short.valueOf(String.valueOf(oMalha)));
                        tfDataValidade.setText(formatar.format(estoque.getDataValidade()));
                        tfDescricao.setText(String.valueOf(estoque.getDescricaoOutros()));
                        tfFornecedor.setText(String.valueOf(estoque.getFornecedor().getNomeFornecedor()));
                        tfTamanho.setText(String.valueOf(malha.getTamanhoMalha()));
                        tfValorCompra.setText(String.valueOf(estoque.getValorCompra()));
                        tfQuantidade.setText(String.valueOf(estoque.getQtdEstoque()));
                        jcFase.setSelectedItem(malha.getFaseMalha());
                        jcProduto.setSelectedItem(estoque.getTipoProduto());
                        fornecedor = estoque.getFornecedor();
                        jcProduto.setEnabled(false);
                        btExcluir3.setEnabled(true);
                    }
                    break;
                case 3:
                    List<Racao> listaRacao;
                    Racao racao = new Racao();
                    estoque = new Racao();
                    listaRacao = (racaoDAO.listar());
                    RacaoTableModel itmRacao = new RacaoTableModel(listaRacao);
                    Object oRacao = TelaConsulta.exibeTela(itmRacao, "Racao");
                    if (oRacao != null) {
                        estoque = racaoRN.pesquisarCodigo(Short.valueOf(String.valueOf(oRacao)));
                        racao = racaoRN.pesquisarCodigo(Short.valueOf(String.valueOf(oRacao)));
                        tfDataValidade.setText(formatar.format(estoque.getDataValidade()));
                        tfDescricao.setText(String.valueOf(estoque.getDescricaoOutros()));
                        tfFornecedor.setText(String.valueOf(estoque.getFornecedor().getNomeFornecedor()));
                        tfProteina.setText(String.valueOf(racao.getProteina()));
                        jcFase.setSelectedItem(racao.getFaseRacao());
                        tfValorCompra.setText(String.valueOf(estoque.getValorCompra()));
                        tfQuantidade.setText(String.valueOf(estoque.getQtdEstoque()));
                        jcProduto.setSelectedItem("Ração");
                        tfPesoRacao.setText(String.valueOf(racao.getPesoRacao()));
                        fornecedor = estoque.getFornecedor();
                        jcProduto.setEnabled(false);
                        btExcluir3.setEnabled(true);
                    }
                    break;
                case 4:
                    List<Outros> listaOutros;
                    Outros outros = new Outros();
                    estoque = new Outros();
                    listaOutros = (outrosDAO.listar());
                    OutrosTableModel itmOutros = new OutrosTableModel(listaOutros);
                    Object oOutros = TelaConsulta.exibeTela(itmOutros, "Outros");
                    if (oOutros != null) {
                        estoque = outrosRN.pesquisarCodigo(Short.valueOf(String.valueOf(oOutros)));
                        outros = outrosRN.pesquisarCodigo(Short.valueOf(String.valueOf(oOutros)));
                        tfDataValidade.setText(formatar.format(estoque.getDataValidade()));
                        tfDescricao.setText(String.valueOf(estoque.getDescricaoOutros()));
                        tfFornecedor.setText(String.valueOf(estoque.getFornecedor().getNomeFornecedor()));
                        tfValorCompra.setText(String.valueOf(estoque.getValorCompra()));
                        tfQuantidade.setText(String.valueOf(estoque.getQtdEstoque()));
                        jcProduto.setSelectedItem(estoque.getTipoProduto());
                        fornecedor = estoque.getFornecedor();
                        jcProduto.setEnabled(false);
                        btExcluir3.setEnabled(true);
                        break;

                    }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "É obrigatório selecionar ao menos um tipo de produto!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btPesquisarActionPerformed


    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (jcProduto.getSelectedItem() != "----") {
            if ((jcProduto.getSelectedIndex() != 0)&&(estoque == null)) {
                switch (jcProduto.getSelectedIndex()) {
                    case 1:
                        estoque = new Medicamento();
                        break;
                    case 2:
                        estoque = new Malha();
                        break;
                    case 3:
                        estoque = new Racao();
                        break;
                    case 4:
                        estoque = new Outros();
                        break;
                }
                try {
                    dataAtual = formatar.parse(formatar.format(data));
                } catch (ParseException ex) {
                    Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                estoque.setDataEntrada(dataAtual);
                try {
                    dataValidade = formatar.parse(tfDataValidade.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                estoque.setDataValidade(dataValidade);
                estoque.setDescricaoOutros(tfDescricao.getText());
                estoque.setFornecedor(fornecedor);
                estoque.setQtdEstoque(Integer.parseInt(tfQuantidade.getText()));
                estoque.setTipoProduto(jcProduto.getSelectedItem().toString());
                estoque.setValorCompra(Double.parseDouble(tfValorCompra.getText()));
                switch (jcProduto.getSelectedIndex()) {
                    case 1:
                        cadastraMedicamento(estoque);
                        break;
                    case 2:
                        cadastraMalha(estoque);
                        break;
                    case 3:
                        cadastraRacao(estoque);
                        break;
                    case 4:
                        cadastraOutros(estoque);
                        break;
                }

            } else {

                try {
                    dataAtual = formatar.parse(formatar.format(data));
                } catch (ParseException ex) {
                    Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                estoque.setDataEntrada(dataAtual);
                try {
                    dataValidade = formatar.parse(tfDataValidade.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                estoque.setDataValidade(dataValidade);
                estoque.setDescricaoOutros(tfDescricao.getText());
                estoque.setFornecedor(fornecedor);
                estoque.setQtdEstoque(Integer.parseInt(tfQuantidade.getText()));
                estoque.setTipoProduto(jcProduto.getSelectedItem().toString());
                estoque.setValorCompra(Double.parseDouble(tfValorCompra.getText()));
                if (JOptionPane.showConfirmDialog(rootPane, "Deseja realmente editar este Produto: " + estoque.getTipoProduto()
                        + " do Fornecedor: " + estoque.getFornecedor().getNomeFornecedor() + "?", "TechPesc", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION) {
                    switch (jcProduto.getSelectedIndex()) {
                        case 1:
                            cadastraMedicamento(estoque);
                            break;
                        case 2:
                            cadastraMalha(estoque);
                            break;
                        case 3:
                            cadastraRacao(estoque);
                            break;
                        case 4:
                            cadastraOutros(estoque);
                            break;
                    }
                    JOptionPane.showMessageDialog(rootPane, "Pronto, este produto foi editado com sucesso!", "Estoque", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Existem campos obrigatórios que não foram preenchidos ou selecionados!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btSalvarActionPerformed
    public void limparCampos() {
        jcFase.setSelectedItem("----");
        jcMedicamento.setSelectedItem("----");
        jcProduto.setSelectedItem("----");
        tfFornecedor.setText("");
        tfDataValidade.setText("");
        tfDescricao.setText("");
        tfProteina.setText("");
        tfTamanho.setText("");
        tfQuantidade.setText("");
        tfValorCompra.setText("");
        tfPesoRacao.setText("");
        jcMedicamento.setEnabled(false);
        tfDescricao.setEnabled(false);
        jcFase.setEnabled(false);
        tfTamanho.setEnabled(false);
        tfProteina.setEnabled(false);
        btExcluir3.setEnabled(false);
        tfPesoRacao.setEnabled(true);
        jcProduto.setEnabled(true);
        estoque = null;
    }

    private void btVoltarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarMenuActionPerformed

        dispose();
    }//GEN-LAST:event_btVoltarMenuActionPerformed

    private void btExcluir3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluir3ActionPerformed
        EstoqueRN estoqueRN = new EstoqueRN();
        if (estoque.getIdEstoque() != 0) {
            if (JOptionPane.showConfirmDialog(rootPane, "Deseja o Produto: " + estoque.getTipoProduto()
                    + " do Fornecedor: " + estoque.getFornecedor().getNomeFornecedor() + "?", "TechPesc", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION) {
                if (estoqueRN.remove(estoque)) {
                    JOptionPane.showMessageDialog(rootPane, "Pronto,  o produto foi excluído com sucesso!", "Estoque", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Não foi possível excluir o Produto: " + estoque.getTipoProduto()
                            + " do Fornecedor: " + estoque.getFornecedor().getNomeFornecedor(),
                            "Erro ao Excluir", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        limparCampos();

    }//GEN-LAST:event_btExcluir3ActionPerformed

    private void btSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvar1ActionPerformed
        limparCampos();        // TODO add your handling code here:
    }//GEN-LAST:event_btSalvar1ActionPerformed

    private void tfValorCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfValorCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfValorCompraActionPerformed

    private void tfFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFornecedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFornecedorActionPerformed

    private void btPesquisarNome4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarNome4ActionPerformed
        FornecedorDAO fornecedorDAO = new FornecedorDAO();
        fornecedor = new Fornecedor();
        FornecedorTableModel fornecedorTableModel = new FornecedorTableModel(fornecedorDAO.listar());
        Object object = TelaConsulta.exibeTela(fornecedorTableModel, "Fornecedores");        // TODO add your handling code here:
        Short codigo = Short.valueOf(String.valueOf(object));
        fornecedor = fornecedorDAO.pesquisarCodigo(codigo);
        tfFornecedor.setText(fornecedor.getNomeFornecedor());
    }//GEN-LAST:event_btPesquisarNome4ActionPerformed

    private void jcProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcProdutoActionPerformed
        if (jcProduto.getSelectedItem() == "Medicamento") {
            jcMedicamento.setEnabled(true);
            tfDescricao.setEnabled(true);
            jcFase.setEnabled(false);
            tfTamanho.setEnabled(false);
            tfProteina.setEnabled(false);
            tfPesoRacao.setEnabled(false);
        }
        if (jcProduto.getSelectedItem() == "Malha") {
            jcFase.setEnabled(true);
            tfTamanho.setEnabled(true);
            tfDescricao.setEnabled(true);
            jcMedicamento.setEnabled(false);
            tfProteina.setEnabled(false);
            tfPesoRacao.setEnabled(false);
        }
        if (jcProduto.getSelectedItem() == "Ração") {
            jcFase.setEnabled(true);
            tfProteina.setEnabled(true);
            tfDescricao.setEnabled(true);
            tfTamanho.setEnabled(false);
            jcMedicamento.setEnabled(false);
            tfPesoRacao.setEnabled(true);
            
        }
        if (jcProduto.getSelectedItem() == "Outros") {
            jcMedicamento.setEnabled(false);
            tfDescricao.setEnabled(true);
            jcFase.setEnabled(false);
            tfTamanho.setEnabled(false);
            tfProteina.setEnabled(false);
            tfPesoRacao.setEnabled(false);
        }

        if (jcProduto.getSelectedItem() == "----") {
            jcMedicamento.setEnabled(false);
            tfDescricao.setEnabled(false);
            jcFase.setEnabled(false);
            tfTamanho.setEnabled(false);
            tfProteina.setEnabled(false);
            tfPesoRacao.setEnabled(false);
        }
    }//GEN-LAST:event_jcProdutoActionPerformed

    private void tfQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfQuantidadeActionPerformed

    private void tfProteinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfProteinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfProteinaActionPerformed

    private void jcFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcFaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcFaseActionPerformed

    private void jcMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcMedicamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcMedicamentoActionPerformed

    private void tfTamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTamanhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTamanhoActionPerformed

    private void tfDataValidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfDataValidadeFocusLost
        if (Util.dataValida(tfDataValidade.getText().toString())==false) {
            JOptionPane.showMessageDialog(rootPane, "Data inválida, redigite!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
            tfDataValidade.setText("");
        }
    }//GEN-LAST:event_tfDataValidadeFocusLost

    private void tfPesoRacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPesoRacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPesoRacaoActionPerformed

    private void btCadastroEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastroEstoqueActionPerformed
        new CadastroFornecedor().setVisible(true);
    }//GEN-LAST:event_btCadastroEstoqueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroEstoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCadastroEstoque;
    private javax.swing.JButton btExcluir3;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btPesquisarNome4;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btSalvar1;
    private javax.swing.JButton btVoltarMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox jcFase;
    private javax.swing.JComboBox jcMedicamento;
    private javax.swing.JComboBox jcProduto;
    private javax.swing.JLabel jlDescricao;
    private javax.swing.JLabel jlFase;
    private javax.swing.JLabel jlMedicamento;
    private javax.swing.JLabel jlProteina;
    private javax.swing.JLabel jlTamanho;
    private javax.swing.JLabel jlTamanho2;
    private javax.swing.JLabel jlTamanho3;
    private techpesc.estoque.racao.Racao racao1;
    private techpesc.estoque.racao.Racao racao2;
    private techpesc.estoque.racao.Racao racao3;
    private javax.swing.JFormattedTextField tfDataValidade;
    private javax.swing.JTextArea tfDescricao;
    private javax.swing.JTextField tfFornecedor;
    private javax.swing.JTextField tfPesoRacao;
    private javax.swing.JTextField tfProteina;
    private javax.swing.JTextField tfQuantidade;
    private javax.swing.JTextField tfTamanho;
    private javax.swing.JTextField tfValorCompra;
    // End of variables declaration//GEN-END:variables

    private void cadastraMedicamento(Estoque estoque) {
        Medicamento m = (Medicamento) estoque;
        String tipo = (String) jcMedicamento.getSelectedItem();
        m.setTipoMedicamento(tipo);
        EstoqueDAO dao = new EstoqueDAO();
        dao.salvar(m);
        limparCampos();
    }

    private void cadastraMalha(Estoque estoque) {
        Malha m = (Malha) estoque;
        m.setFaseMalha(jcFase.getSelectedItem().toString());
        m.setTamanhoMalha(Double.parseDouble(tfTamanho.getText()));
        EstoqueDAO dao = new EstoqueDAO();
        dao.salvar(m);
        limparCampos();
    }

    private void cadastraRacao(Estoque estoque) {
        Racao r = (Racao) estoque;
        r.setFaseRacao(jcFase.getSelectedItem().toString());
        r.setProteina((double) Double.parseDouble(tfProteina.getText()));
        r.setPesoRacao((double) Double.parseDouble(tfPesoRacao.getText())*r.getQtdEstoque());
        EstoqueDAO dao = new EstoqueDAO();
        dao.salvar(r);
        limparCampos();

    }

    private void cadastraOutros(Estoque estoque) {

        Outros outros = (Outros) estoque;
        EstoqueDAO dao = new EstoqueDAO();
        dao.salvar(outros);
        limparCampos();

    }
}
