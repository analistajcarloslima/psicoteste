/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techpesc.telas;

import java.text.ParseException;
import techpesc.relogio.Relogio;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import techpesc.alimentacao.Alimentacao;
import techpesc.alimentacao.AlimentacaoDAO;
import techpesc.alimentacao.AlimentacaoTableModel;
import techpesc.cliente.Cliente;
import techpesc.cliente.ClienteDAO;
import techpesc.cliente.ClienteRN;
import techpesc.cliente.ClienteTableModel;
import techpesc.estoque.racao.Racao;
import techpesc.estoque.racao.RacaoDAO;
import techpesc.estoque.racao.RacaoRN;
import techpesc.estoque.racao.RacaoTableModel;
import techpesc.lote.Lote;
import techpesc.lote.LoteDAO;
import techpesc.lote.LoteTableModel;
import techpesc.tanquerede.TanqueRede;
import techpesc.tanquerede.TanqueRedeDAO;
import techpesc.tanquerede.TanqueRedeTableModel;
import techpesc.transfereTR.Transferencia;
import techpesc.transfereTR.TransferenciaDAO;
import techpesc.transfereTR.TransferenciaTableModel;
import techpesc.util.Util;
import techpesc.venda.Venda;
import techpesc.venda.VendaDAO;
import techpesc.venda.VendaTableModel;

/**
 *
 * @author fatima
 */
public class CadastroVendaTanqueRede extends javax.swing.JDialog {

    Lote lote = new Lote();
    Venda venda = new Venda();
    VendaDAO vendaDAO = new VendaDAO();

    Cliente cliente = new Cliente();
    ClienteRN clienteRN = new ClienteRN();

    TanqueRedeDAO tanqueredeDAO = new TanqueRedeDAO();
    Alimentacao alimentacao = new Alimentacao();
    AlimentacaoDAO alimentacaoDAO = new AlimentacaoDAO();
    List<Double> valorVendaLista = new ArrayList<>();
    List<TanqueRede> listaTanqueRedesVendidos = new ArrayList<>();
    TransferenciaDAO transferenciaDAO = new TransferenciaDAO();
    List<TanqueRede> tanqueRedesLote = new ArrayList<>();
    List<TanqueRede> tanqueSemAlteracao = new ArrayList<>();
    List<Lote> listadeLotes = new ArrayList<>();
    List<TanqueRede> tanqueRedesNovoTR = new ArrayList<>();
    SimpleDateFormat formatar = new SimpleDateFormat("dd/MM/yyyy hh:mm");
    Date data = new Date();
    Date dataAtual = new Date();

    /**
     * Creates new form Cadastro_de_Funcionário
     */
    public CadastroVendaTanqueRede() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/techpesc/imagens/peixe.png")).getImage());
        setModal(true);
        limparCampos();
        mostrarHora();

    }

    public void mostrarHora() {
        Relogio ah = new Relogio(tfHora);
        ah.mostrarData(true);
        Thread thHora = ah;
        thHora.start();
    }

    public void somaVendaTotal() {
        double somaTotal = 0.0;
        for (int i = 0; i < valorVendaLista.size(); i++) {
            somaTotal = somaTotal + valorVendaLista.get(i);
        }
        tfValorTotal.setText(String.valueOf(somaTotal));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator17 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        btPesquisar = new javax.swing.JButton();
        btVoltarMenu = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btSalvar1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel42 = new javax.swing.JLabel();
        tfNomeLote = new javax.swing.JTextField();
        btPesquisarNome4 = new javax.swing.JButton();
        btVender = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbTanqueRedeLote = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbTanqueRedeNovoTR = new javax.swing.JTable();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        tfHora = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        tfValorTotal = new javax.swing.JLabel();
        btExcluirTanqueRede1 = new javax.swing.JButton();
        btPesquisarNome5 = new javax.swing.JButton();
        tfCliente = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        btCadastroLote = new javax.swing.JButton();
        btCadastroLote1 = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alimentação de Peixe");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(23, 49, 106));
        jPanel1.setToolTipText("");

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/cabeçalho1.png"))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Venda de Peixes");

        jPanel2.setBackground(new java.awt.Color(23, 49, 106));

        btPesquisar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btPesquisar.setForeground(java.awt.Color.white);
        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/pesquisa.png"))); // NOI18N
        btPesquisar.setText("Pesquisar");
        btPesquisar.setToolTipText("Clique aqui para pesquisar");
        btPesquisar.setContentAreaFilled(false);
        btPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btPesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        btVoltarMenu.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btVoltarMenu.setForeground(java.awt.Color.white);
        btVoltarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/voltar.png"))); // NOI18N
        btVoltarMenu.setText("Voltar");
        btVoltarMenu.setToolTipText("Voltar pro menu principal");
        btVoltarMenu.setContentAreaFilled(false);
        btVoltarMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVoltarMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btVoltarMenu.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btVoltarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarMenuActionPerformed(evt);
            }
        });

        btSalvar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btSalvar.setForeground(java.awt.Color.white);
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/salvar.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("Clique aqui para salvar");
        btSalvar.setContentAreaFilled(false);
        btSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSalvar.setDefaultCapable(false);
        btSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btSalvar1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btSalvar1.setForeground(java.awt.Color.white);
        btSalvar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/novo.png"))); // NOI18N
        btSalvar1.setText("Novo");
        btSalvar1.setToolTipText("Clique para limpar todos os campos");
        btSalvar1.setContentAreaFilled(false);
        btSalvar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSalvar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btVoltarMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btSalvar)
                .addGap(18, 18, 18)
                .addComponent(btPesquisar)
                .addGap(46, 46, 46))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btSalvar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btVoltarMenu, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );

        jLabel42.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Lote.:");

        tfNomeLote.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfNomeLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomeLoteActionPerformed(evt);
            }
        });

        btPesquisarNome4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btPesquisarNome4.setForeground(java.awt.Color.white);
        btPesquisarNome4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_pesquisar.png"))); // NOI18N
        btPesquisarNome4.setContentAreaFilled(false);
        btPesquisarNome4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisarNome4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btPesquisarNome4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPesquisarNome4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarNome4ActionPerformed(evt);
            }
        });

        btVender.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btVender.setForeground(java.awt.Color.white);
        btVender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/icone_venda.png"))); // NOI18N
        btVender.setText("Vender");
        btVender.setContentAreaFilled(false);
        btVender.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVender.setDefaultCapable(false);
        btVender.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btVender.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVenderActionPerformed(evt);
            }
        });

        tbTanqueRedeLote.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tbTanqueRedeLote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Tanques Rede"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTanqueRedeLote.setRowSelectionAllowed(false);
        tbTanqueRedeLote.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbTanqueRedeLoteFocusLost(evt);
            }
        });
        tbTanqueRedeLote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTanqueRedeLoteMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbTanqueRedeLote);

        tbTanqueRedeNovoTR.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tbTanqueRedeNovoTR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Tanques Rede"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTanqueRedeNovoTR.setRowSelectionAllowed(false);
        tbTanqueRedeNovoTR.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbTanqueRedeNovoTRFocusLost(evt);
            }
        });
        tbTanqueRedeNovoTR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTanqueRedeNovoTRMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbTanqueRedeNovoTR);

        jLabel43.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("T.R. Vendidos.:");

        jLabel44.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("T.R. Não Vendidos.:");

        tfHora.setBackground(new java.awt.Color(102, 255, 102));
        tfHora.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        tfHora.setForeground(new java.awt.Color(255, 255, 255));
        tfHora.setText("hora.:");

        jLabel45.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Valor Total R$.:");

        tfValorTotal.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        tfValorTotal.setForeground(new java.awt.Color(255, 255, 255));
        tfValorTotal.setText("0,0");

        btExcluirTanqueRede1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_excluir.png"))); // NOI18N
        btExcluirTanqueRede1.setContentAreaFilled(false);
        btExcluirTanqueRede1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirTanqueRede1ActionPerformed(evt);
            }
        });

        btPesquisarNome5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btPesquisarNome5.setForeground(java.awt.Color.white);
        btPesquisarNome5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_pesquisar.png"))); // NOI18N
        btPesquisarNome5.setContentAreaFilled(false);
        btPesquisarNome5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPesquisarNome5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btPesquisarNome5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPesquisarNome5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarNome5ActionPerformed(evt);
            }
        });

        tfCliente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfClienteActionPerformed(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("Cliente.:");

        btCadastroLote.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btCadastroLote.setForeground(new java.awt.Color(255, 255, 255));
        btCadastroLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_cadastrar.png"))); // NOI18N
        btCadastroLote.setContentAreaFilled(false);
        btCadastroLote.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCadastroLote.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCadastroLote.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCadastroLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastroLoteActionPerformed(evt);
            }
        });

        btCadastroLote1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btCadastroLote1.setForeground(new java.awt.Color(255, 255, 255));
        btCadastroLote1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techpesc/imagens/sub_cadastrar.png"))); // NOI18N
        btCadastroLote1.setContentAreaFilled(false);
        btCadastroLote1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCadastroLote1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCadastroLote1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCadastroLote1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastroLote1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(jLabel1)
                        .addGap(48, 48, 48)
                        .addComponent(tfHora))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel46)
                            .addComponent(jLabel42))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfCliente)
                            .addComponent(tfNomeLote, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btPesquisarNome5, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(btPesquisarNome4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btCadastroLote1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btCadastroLote, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btVender)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfValorTotal)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btExcluirTanqueRede1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tfHora))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel42))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btPesquisarNome4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNomeLote, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btCadastroLote, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 1, Short.MAX_VALUE)
                                .addComponent(btCadastroLote1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel46)
                                .addComponent(btPesquisarNome5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel43)))
                    .addComponent(btExcluirTanqueRede1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btVender, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel45)
                            .addComponent(tfValorTotal))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (venda == null) {
            venda = new Venda();
        }
        if (Util.chkVazio(tfNomeLote.getText(), tfCliente.getText()) == true) {
            if (venda.getIdVenda() == 0) {
                if (!listaTanqueRedesVendidos.isEmpty()) {
                    for (int i = 0; i < listaTanqueRedesVendidos.size(); i++) {
                        listaTanqueRedesVendidos.get(i).setQuantidadePeixesVinculados(0);
                        listaTanqueRedesVendidos.get(i).setMortandadeTanqueRede(0);
                    }
                    venda.setLote(lote);
                    venda.setCliente(cliente);
                    venda.setValorVendaTanqueRede(Double.parseDouble(tfValorTotal.getText()));
                    venda.setTanquesVendidos(listaTanqueRedesVendidos);
                    try {
                        dataAtual = formatar.parse(formatar.format(data));
                    } catch (ParseException ex) {
                        Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    venda.setDataVenda(dataAtual);
                    vendaDAO.salvar(venda);
                    limparCampos();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Não foi selecionado nenhum tanque para esta venda!",
                            "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                if (!listaTanqueRedesVendidos.isEmpty()) {
                    venda.setLote(lote);
                    venda.setCliente(cliente);
                    venda.setValorVendaTanqueRede(Double.parseDouble(tfValorTotal.getText()));
                    venda.setTanquesVendidos(listaTanqueRedesVendidos);
                    try {
                        dataAtual = formatar.parse(formatar.format(data));
                    } catch (ParseException ex) {
                        Logger.getLogger(CadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    venda.setDataVenda(dataAtual);
                    vendaDAO.salvar(venda);
                    limparCampos();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Não foi selecionado nenhum tanque para esta venda!",
                            "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

    }//GEN-LAST:event_btSalvarActionPerformed

    public void limparCampos() {
        lote = new Lote();
        cliente = new Cliente();
        tfNomeLote.setText("");
        tfCliente.setText("");
        tanqueRedesLote.clear();
        tanqueRedesNovoTR.clear();
        valorVendaLista.clear();
        listaTanqueRedesVendidos.clear();
        btSalvar.setEnabled(true);
        valorVendaLista.clear();
        lote = null;
        venda = null;
        cliente = null;

        tfValorTotal.setText("0,0");
        atualizaTabelaTanqueRedeLote();
        atualizaTabelaTanqueRedeNovoTR();
    }

    private void btVoltarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarMenuActionPerformed

        dispose();
    }//GEN-LAST:event_btVoltarMenuActionPerformed

    private void btSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvar1ActionPerformed
        limparCampos();        // TODO add your handling code here:
    }//GEN-LAST:event_btSalvar1ActionPerformed

    private void tfNomeLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomeLoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNomeLoteActionPerformed

    private void btPesquisarNome4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarNome4ActionPerformed
        LoteDAO loteDAO = new LoteDAO();
        lote = new Lote();

        LoteTableModel loteTableModel = new LoteTableModel(loteDAO.listar());
        Object object = TelaConsulta.exibeTela(loteTableModel, "Lotes");        // TODO add your handling code here:
        Short codigo = Short.valueOf(String.valueOf(object));
        lote = loteDAO.pesquisarCodigo(codigo);
        tfNomeLote.setText(lote.getNomeLote());
        tanqueSemAlteracao.addAll(lote.getTanquesRede());

        tanqueRedesLote = lote.getTanquesRede();

        atualizaTabelaTanqueRedeLote();
    }//GEN-LAST:event_btPesquisarNome4ActionPerformed

    private void atualizaTabelaTanqueRedeLote() {
        TanqueRedeTableModel atm = new TanqueRedeTableModel(tanqueRedesLote);
        tbTanqueRedeLote.setModel(atm);
    }

    private void atualizaTabelaTanqueRedeNovoTR() {
        TanqueRedeTableModel atm = new TanqueRedeTableModel(tanqueRedesNovoTR);
        tbTanqueRedeNovoTR.setModel(atm);
    }
    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        List<Venda> lista;
        VendaDAO dao = new VendaDAO();
        lista = (dao.listar());
        VendaTableModel itm = new VendaTableModel(lista);
        Object o = TelaConsulta.exibeTela(itm, "Venda");
        if (o != null) {
            venda = dao.pesquisarCodigo(Short.valueOf(String.valueOf(o)));
            tfNomeLote.setText(venda.getLote().getNomeLote());
            tfCliente.setText(venda.getCliente().getNomeCliente());
            tanqueRedesLote = venda.getLote().getTanquesRede();
            tanqueRedesNovoTR.addAll(venda.getTanquesVendidos());
            listaTanqueRedesVendidos.addAll(venda.getTanquesVendidos());
            lote = venda.getLote();
            cliente = venda.getCliente();
            valorVendaLista.add(venda.getValorVendaTanqueRede());
            tfValorTotal.setText(String.valueOf(venda.getValorVendaTanqueRede()));
            atualizaTabelaTanqueRedeLote();
            atualizaTabelaTanqueRedeNovoTR();

        }
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void btVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVenderActionPerformed
        Alimentacao alimentacaoTemporaria = new Alimentacao();
        Double valorVenda = 0.0;
        int row = tbTanqueRedeLote.getSelectedRow();
        if (lote != null) {
            if (cliente != null) {
                if (row > -1) {
                    if (JOptionPane.showConfirmDialog(null, "Você deseja realmente vender os peixes do Tanque.: " + tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()).getNomeTanqueRede()
                            + " ?", "TechPesc", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION) {
                        String valor = (JOptionPane.showInputDialog("Quantidade de Peixes no T.R. Selecionado: " + tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()).getQuantidadePeixesVinculados() + " Peixes\n\n"
                                + "Digite o valor unitário de um peixe T.R.: ", 0.0));
                        if (!valor.isEmpty()) {
                            valorVenda = Double.parseDouble(valor);
                            if ((valorVenda > 0.0)) {
                                valorVenda = Double.parseDouble(valor);
                                tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()).setSituacaoTanqueRede(true);
                                listaTanqueRedesVendidos.add(tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()));
                                valorVendaLista.add(valorVenda * tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()).getQuantidadePeixesVinculados());
                                tanqueRedesNovoTR.add(tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()));
                                tanqueRedesLote.remove(tanqueRedesLote.get(tbTanqueRedeLote.getSelectedRow()));
                                atualizaTabelaTanqueRedeNovoTR();
                                atualizaTabelaTanqueRedeLote();
                                somaVendaTotal();
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "O valor digitado da venda do Tanque foi 0.0, sendo assim, nenhum T.R foi vendido!",
                                        "ERRO", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Não foi digitado o valor da venda do Tanque, sendo assim, nenhum T.R foi vendido!",
                                    "ERRO", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "A transferência de tanques não foi realizada!",
                                "ERRO", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Selecione o Tanque Rede!",
                            "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "É obrigatório vincular um cliente!",
                        "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "É obrigatório vincular um lote!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btVenderActionPerformed

    private void tbTanqueRedeLoteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbTanqueRedeLoteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tbTanqueRedeLoteFocusLost

    private void tbTanqueRedeLoteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTanqueRedeLoteMouseClicked
        if (evt.getClickCount() == 2) {
            btVenderActionPerformed(null);
        }
    }//GEN-LAST:event_tbTanqueRedeLoteMouseClicked

    private void tbTanqueRedeNovoTRFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbTanqueRedeNovoTRFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tbTanqueRedeNovoTRFocusLost

    private void tbTanqueRedeNovoTRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTanqueRedeNovoTRMouseClicked
        if (evt.getClickCount() == 2) {
            JOptionPane.showMessageDialog(rootPane, "Valores do Tanque.: " + listaTanqueRedesVendidos.get(tbTanqueRedeNovoTR.getSelectedRow()).getNomeTanqueRede() + "\n"
                    + "Valor Unitário: " + valorVendaLista.get(tbTanqueRedeNovoTR.getSelectedRow()) / listaTanqueRedesVendidos.get(tbTanqueRedeNovoTR.getSelectedRow()).getQuantidadePeixesVinculados() + "\n"
                    + "Valor Total.: " + valorVendaLista.get(tbTanqueRedeNovoTR.getSelectedRow()), "Preço do Tanque Rede", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_tbTanqueRedeNovoTRMouseClicked

    private void btExcluirTanqueRede1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirTanqueRede1ActionPerformed
        Double valorVenda = 0.0;
        if (venda == null) {
            venda = new Venda();
        }
        if (venda.getIdVenda() != 0) {
            if (JOptionPane.showConfirmDialog(rootPane, "Deseja Excluir a Venda do Tanque Rede: " + venda.getTanquesVendidos().get(tbTanqueRedeNovoTR.getSelectedRow()).getNomeTanqueRede() + "?\n\n"
                    + "Essa exclusão não fará o tanque voltar pro lote, apenas dará baixa no caixa!",
                    "Excluir", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {
                int row = tbTanqueRedeNovoTR.getSelectedRow();
                if (row > -1) {

                    String valor = JOptionPane.showInputDialog("Digite o valor equivalente ao T.R. que deseja excluir ", 0.0);
                    if (!valor.isEmpty()) {
                        valorVenda = Double.parseDouble(valor);
                        if ((valorVenda > 0.0)) {
                            if (valorVenda <= venda.getValorVendaTanqueRede()) {
                                venda.setValorVendaTanqueRede(venda.getValorVendaTanqueRede() - valorVenda);
                                listaTanqueRedesVendidos.remove(tbTanqueRedeNovoTR.getSelectedRow());
                                tanqueRedesNovoTR.remove(tbTanqueRedeNovoTR.getSelectedRow());
                                valorVendaLista.add((-valorVenda));
                                somaVendaTotal();
                                atualizaTabelaTanqueRedeNovoTR();
                                JOptionPane.showMessageDialog(rootPane, "A venda do T.R. selecionado foi excluída com sucesso!",
                                        "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "O valor digitado é maior que o valor total da venda!",
                                        "ERRO", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "O valor digitado da venda do Tanque foi 0.0, sendo assim, nenhum T.R foi excluído!",
                                    "ERRO", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Não foi digitado o valor da venda do Tanque, sendo assim, nenhum T.R foi excluído!",
                                "ERRO", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Selecione o Tanque Rede!",
                            "ERRO", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Nenhum tanque foi excluído!",
                        "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            if (JOptionPane.showConfirmDialog(rootPane, "Deseja Excluir a Venda do Tanque Rede Selecionado" + "?\n\n",
                    "Excluir", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {
                tanqueRedesLote.add(tanqueRedesNovoTR.get(tbTanqueRedeNovoTR.getSelectedRow()));
                listaTanqueRedesVendidos.remove(tbTanqueRedeNovoTR.getSelectedRow());
                tanqueRedesNovoTR.remove(tbTanqueRedeNovoTR.getSelectedRow());
                valorVendaLista.remove(tbTanqueRedeNovoTR.getSelectedRow());
                somaVendaTotal();
                atualizaTabelaTanqueRedeNovoTR();
                atualizaTabelaTanqueRedeLote();
                JOptionPane.showMessageDialog(rootPane, "A venda do T.R. selecionado foi excluída com sucesso!",
                        "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Nenhum tanque foi excluído!",
                        "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
        atualizaTabelaTanqueRedeNovoTR();
    }//GEN-LAST:event_btExcluirTanqueRede1ActionPerformed

    private void btPesquisarNome5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarNome5ActionPerformed
        ClienteDAO clienteDAO = new ClienteDAO();
        cliente = new Cliente();

        ClienteTableModel clienteTM = new ClienteTableModel(clienteDAO.listar());
        Object object = TelaConsulta.exibeTela(clienteTM, "Clientes");        // TODO add your handling code here:
        Short codigo = Short.valueOf(String.valueOf(object));
        cliente = clienteDAO.pesquisarCodigo(codigo);
        tfCliente.setText(cliente.getNomeCliente());
    }//GEN-LAST:event_btPesquisarNome5ActionPerformed

    private void tfClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfClienteActionPerformed

    private void btCadastroLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastroLoteActionPerformed
        new CadastroLote().setVisible(true);
    }//GEN-LAST:event_btCadastroLoteActionPerformed

    private void btCadastroLote1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastroLote1ActionPerformed
        new CadastroCliente().setVisible(true);
    }//GEN-LAST:event_btCadastroLote1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroVendaTanqueRede.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroVendaTanqueRede.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroVendaTanqueRede.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroVendaTanqueRede.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroVendaTanqueRede().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCadastroLote;
    private javax.swing.JButton btCadastroLote1;
    private javax.swing.JButton btExcluirTanqueRede1;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btPesquisarNome4;
    private javax.swing.JButton btPesquisarNome5;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btSalvar1;
    private javax.swing.JButton btVender;
    private javax.swing.JButton btVoltarMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tbTanqueRedeLote;
    private javax.swing.JTable tbTanqueRedeNovoTR;
    private javax.swing.JTextField tfCliente;
    private javax.swing.JLabel tfHora;
    private javax.swing.JTextField tfNomeLote;
    private javax.swing.JLabel tfValorTotal;
    // End of variables declaration//GEN-END:variables

}
